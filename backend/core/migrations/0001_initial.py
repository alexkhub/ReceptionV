# Generated by Django 5.0.6 on 2024-05-30 15:42

import autoslug.fields
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import sortedm2m.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Educational_Institution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Название')),
                ('address', models.CharField(max_length=100, verbose_name='Адрес')),
            ],
            options={
                'verbose_name': 'Образовательное учреждение',
                'verbose_name_plural': 'Образовательные учреждения',
            },
        ),
        migrations.CreateModel(
            name='List_Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Вопрос')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Список вопросов',
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('period_of_study', models.CharField(max_length=100, verbose_name='Период обучения')),
                ('price', models.PositiveIntegerField(verbose_name='Цена')),
                ('year', models.PositiveIntegerField(default=2024, verbose_name='Год')),
                ('study_plan', models.FileField(upload_to='study_plan/%Y/', verbose_name='Учебный план')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='get_url', unique=True, verbose_name='URL')),
            ],
            options={
                'verbose_name': 'Специальность',
                'verbose_name_plural': 'Специальности',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='Телефон')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='username', unique=True, verbose_name='URL')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('address', models.CharField(blank=True, max_length=150, null=True, verbose_name='Адрес')),
                ('user_photo', models.ImageField(blank=True, null=True, upload_to='user_photo/%Y/%m/%d/', verbose_name='Аватарка')),
                ('year_of_graduation', models.PositiveIntegerField(default=2024, verbose_name='Год выпуска')),
                ('level_of_education', models.CharField(choices=[('СПО', 'СПО'), ('Бакалавриат', 'Бакалавриат'), ('Магистратура', 'Магистратура'), ('Специалитет', 'Специалитет')], max_length=30, verbose_name='Уровень образования')),
                ('use_result', models.PositiveIntegerField(default=0, verbose_name='Баллы ЕГЭ')),
                ('gpa', models.DecimalField(decimal_places=2, default=0, max_digits=3, verbose_name='Средний балл')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('educational_institution', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.educational_institution', verbose_name='Образовательное учреждение')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('document_type', models.CharField(choices=[('Паспорт', 'Паспорт'), ('Аттестат', 'Аттестат'), ('СНИЛС', 'СНИЛС'), ('Фотография 3x4', 'Фотография 3x4'), ('Медицинская справка', 'Медицинская справка'), ('Другое', 'Другое')], max_length=70, verbose_name='Тип документа')),
                ('document', models.FileField(upload_to='documents/%Y/%m/%d/', verbose_name='Документ')),
                ('date_add', models.DateField(auto_now_add=True, verbose_name='Дата')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Документ',
                'verbose_name_plural': 'Документы',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.TextField(blank=True, verbose_name='Ответ')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('question', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.list_questions', verbose_name='Вопрос')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Список вопросов',
            },
        ),
        migrations.CreateModel(
            name='Specialist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.CharField(max_length=100, verbose_name='Должность')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Специалист',
                'verbose_name_plural': 'Специалисты',
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата')),
                ('status', models.CharField(choices=[('Принят', 'Принят'), ('Обрабатывается', 'Обрабатывается'), ('Отказ', 'Отказ')], max_length=40, verbose_name='Статус')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.profession', verbose_name='Специальность')),
                ('question', sortedm2m.fields.SortedManyToManyField(help_text=None, to='core.question')),
                ('specialist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.specialist', verbose_name='Специалист')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
            },
        ),
    ]
